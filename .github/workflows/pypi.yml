name: pypi

on:
  push:
    branches: [ main ]
  pull_request: 
    branches: [ main ]

jobs:
  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -U pytest
      - name: Run unit tests
        run: pytest skyplane/test/unit_nocloud

  # test-cloud-aws:
  #   runs-on: ubuntu-latest
  #   needs: [ unittest ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.8"
  #         cache: 'pip'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -e .
  #         pip install -U pytest
  #    - name: Run cloud tests
  #       # consider only running cloud tests for PRs to main once we go open source
  #       if: ${{ github.event_name == 'pull_request' && github.base_ref == github.event.repository.default_branch }}
  #       run: |
  #         pytest skyplane/test/unit_aws
  #         pytest skyplane/test/unit_azure
  #         pytest skyplane/test/unit_gcp

  deploy-pypi:
    runs-on: ubuntu-latest
    needs: [ test-unit ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[solver,gateway]"
          python -m pip install build
      - name: Build wheels
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Upload wheels
        run: twine upload dist/*
    - name: Publish distribution Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/